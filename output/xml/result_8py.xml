<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="result_8py" kind="file" language="Python">
    <compoundname>result.py</compoundname>
    <innernamespace refid="namespaceresult">result</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceresult" refkind="compound"><highlight class="comment">#<sp/>Authors:<sp/>Jayaprakash<sp/>A</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">##<sp/>Code<sp/>that<sp/>sorts<sp/>the<sp/>files<sp/>with<sp/>their<sp/>nearest<sp/>files</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">##<sp/>based<sp/>on<sp/>word<sp/>frequency.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;@package<sp/>docstring</highlight></codeline>
<codeline lineno="9"><highlight class="stringliteral">Documentation<sp/>for<sp/>this<sp/>module.&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>print_function</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="namespaceresult_1a701c28db119049562d7d29ca31055c29" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceresult_1a701c28db119049562d7d29ca31055c29" kindref="member">calculate_nearest</ref>(file_name):</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Function<sp/>name<sp/>:<sp/>calculate_nearest</highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Input<sp/>arguments<sp/>:</highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1.<sp/>string<sp/>file_name<sp/>:<sp/>Name<sp/>of<sp/>file<sp/>that<sp/>conatins<sp/>result</highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Purpose<sp/>:<sp/>To<sp/>find<sp/>the<sp/>nearest<sp/>file<sp/>of<sp/>each<sp/>and<sp/>every<sp/>file<sp/></highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Return<sp/>Value<sp/>:<sp/>The<sp/>dictionary<sp/>containing<sp/>the<sp/>nearest<sp/>file<sp/>index<sp/>of<sp/>each<sp/>file</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>result_file<sp/>=<sp/>open(file_name<sp/>,</highlight><highlight class="stringliteral">&apos;r&apos;)</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>size<sp/>=<sp/>raw_input(&quot;Please<sp/>tell<sp/>how<sp/>many<sp/>files<sp/>were<sp/>present<sp/>in<sp/>calculation<sp/>of<sp/>result\t&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>result_file.readlines()</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>result_dict<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>line_count<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(int(size),len(result)):</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[line_count]<sp/>=<sp/>result[line_count].rstrip()<sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index1,<sp/>index2,<sp/>index3<sp/>=<sp/>result[line_count].split(</highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>index1<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>result_dict.keys():</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result_dict[index1]<sp/>=<sp/>index2</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>index2<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>result_dict.keys():</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result_dict[index2]<sp/>=<sp/>index1</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(count<sp/>==<sp/>size):</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result_dict</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;__main__&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="namespaceresult_1a28b7e2030adf7744b4ff42da31c0a58a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>folder_path<sp/>=<sp/>raw_input(</highlight><highlight class="stringliteral">&quot;Please<sp/>input<sp/>the<sp/>path<sp/>to<sp/>the<sp/>folder\t&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="49" refid="namespaceresult_1ad84b525edcc6cfe3f42a724ad9631920" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>cur_home_dir<sp/><sp/>=<sp/>os.getcwd()</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>os.chdir(folder_path)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="namespaceresult_1acf51e2242cbe71fdb781f378dd1b08f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>file_name<sp/>=<sp/>raw_input(</highlight><highlight class="stringliteral">&quot;Please<sp/>input<sp/>the<sp/>name<sp/>of<sp/>result<sp/>file.\t&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="53" refid="namespaceresult_1ac6537f54ad765b7bd38c3ac05ba11853" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>result_dict<sp/>=<sp/><ref refid="namespaceresult_1a701c28db119049562d7d29ca31055c29" kindref="member">calculate_nearest</ref>(file_name)</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>os.chdir(cur_home_dir<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;/out_res/&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="namespaceresult_1a3e9c34d216aa54944d35a8d48a885ee9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>res_out_file<sp/>=<sp/>open(</highlight><highlight class="stringliteral">&apos;eval_res-nearest&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;w&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>key<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>result_dict.keys():</highlight></codeline>
<codeline lineno="59" refid="namespaceresult_1a37523b375176c9d24964d26e915bce32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(key,<sp/>end=</highlight><highlight class="stringliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,file=res_out_file)</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(result_dict[key],<sp/>end=</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">,file=res_out_file)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>res_out_file.close()</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
    </programlisting>
    <location file="result.py"/>
  </compounddef>
</doxygen>
